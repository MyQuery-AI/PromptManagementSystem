services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: prompt-management-db
    environment:
      POSTGRES_DB: prompt_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5500:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Blue App Instance
  prompt-manager-blue:
    build: .
    container_name: prompt-manager-blue
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3060:3001"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "deployment=blue"

  # Green App Instance
  prompt-manager-green:
    build: .
    container_name: prompt-manager-green
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3061:3001"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "deployment=green"
    profiles:
      - green

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
